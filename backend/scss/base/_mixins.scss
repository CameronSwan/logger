/* Font sizes */
// Source: https://www.smashingmagazine.com/2015/06/responsive-typography-with-sass-maps/

@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {

    @each $fs-breakpoint,
    $fs-font-size in $fs-map {
      @if $fs-breakpoint ==null {
        @include make-font-size($fs-font-size);
      }
  
      @else {
        // If $fs-font-size is a key that exists in
        // $fs-breakpoints, use the value
        @if map-has-key($fs-breakpoints, $fs-breakpoint) {
          $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
        }
  
        @media screen and (min-width: $fs-breakpoint) {
          @include make-font-size($fs-font-size);
        }
      }
    }
  }
  
  @mixin make-font-size($fs-font-size) {
    // If $fs-font-size is a list, include
    // both font-size and line-height
    @if type-of($fs-font-size)=="list" {
      font-size: nth($fs-font-size, 1);
  
      @if (length($fs-font-size) > 1) {
        line-height: nth($fs-font-size, 2);
      }
    }
  
    @else {
      font-size: $fs-font-size;
    }
  }
  
  /* Media Queries */
  //Source: https://jonsuh.com/blog/managing-responsive-breakpoints-with-sass-maps/
  
  @mixin media-query($mq-breakpoint, $mq-breakpoints: $breakpoints) {
    // If $mq-breakpoint is a key that exists in
    // $mq-breakpoints, get and use the value
    @if map-has-key($mq-breakpoints, $mq-breakpoint) {
      $mq-breakpoint: map-get($mq-breakpoints, $mq-breakpoint);
    }
    
    @media screen and (min-width: #{$mq-breakpoint}) {
      @content;
    }
  }

  /* Lightmode vs Darkmode Themes*/
  //Source: https://medium.com/@dmitriy.borodiy/easy-color-theming-with-scss-bc38fd5734d1
  
  @mixin themify($themes: $themes) {
    @each $theme, $map in $themes {
  
      .theme-#{$theme} & {
        $theme-map: () !global;
        @each $key, $submap in $map {
          $value: map-get(map-get($themes, $theme), '#{$key}');
          $theme-map: map-merge($theme-map, ($key: $value)) !global;
        }
  
        @content;
        $theme-map: null !global;
      }
  
    }
  }

  @function themed($key) {
    @return map-get($theme-map, $key);
  }